-- 2、查询“生物”课程比“物理”课程成绩高的所有学生的学号；
-- 获取学生id和生物成绩临时表，获取学生id物理成绩临时表，根据学生id联合起来临时表，进行筛选
-- select A.student_id,A.num_sw,B.num_wl from
-- (select student_id,num as num_sw from score left join course on score.course_id=course.cid where cname="生物")as A
-- LEFT JOIN
-- (select student_id,num as num_wl from score left join course on score.course_id=course.cid where cname="物理") as B
-- on A.student_id=B.student_id
-- where num_sw>num_wl;

-- 3、查询平均成绩大于60分的同学的学号和平均成绩；
-- SELECT student_id,avg(num) from score
-- left JOIN student
-- on score.student_id=student.sid
-- GROUP BY student_id
-- having avg(num)>60;

-- 4、查询所有同学的学号、姓名、选课数、总成绩；
-- select student.sid, student.sname,count(course_id) as course_num, sum(num) as sum_score from score left join student
-- on score.student_id=student.sid
-- GROUP BY student_id;

-- 5、查询姓“李”的老师的个数；
-- select count(*) from teacher where tname like "李%";

-- 6、查询没学过“李平”老师课的同学的学号、姓名；
-- 查出李平老师课程id, 查所有同学学的课程id, 筛选
-- select * from student where sid not in
-- (SELECT DISTINCT student_id FROM score where score.course_id in
-- (select cid from course left join teacher on course.teacher_id=teacher.tid where tname="李平老师")
-- );


-- 7、查询学过“001”并且也学过编号“002”课程的同学的学号、姓名；
-- select student_id,sname from
-- (select student_id,course_id from score where course_id=1 or course_id =2) as A
-- LEFT JOIN student on A.student_id=student.sid
-- GROUP BY student_id
-- HAVING count(student_id) > 1;

-- 8、查询学过“李平”老师所教的所有课的同学的学号、姓名；
-- select DISTINCT student_id,sname from score left join student on score.student_id=student.sid
-- where course_id in
-- (select cid from teacher left JOIN course on teacher.tid=course.teacher_id where tname='李平老师');
--

-- 9、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名；
-- 查询学生的002课程成绩，查询学生001课程成绩，联合两个临时表，筛选
-- select A.student_id, A.num_001, B.num_002 from
-- (select student_id,course_id,num as num_001 from score where course_id='1') as A
-- left join
-- (select student_id,course_id,num as num_002 from score where course_id='2') as B
-- on A.student_id=B.student_id
-- where A.num_001>B.num_002;

-- 10、查询有课程成绩小于60分的同学的学号、姓名；
-- select sid as "学号", sname as "姓名" from student where sid in
-- (select DISTINCT  student_id from score where num < 60);

-- 11、查询没有学全所有课的同学的学号、姓名；
-- select student_id,count(1) as course_num,sname from score LEFT JOIN student on score.student_id=student.sid
-- GROUP BY student_id
-- HAVING course_num !=
-- (select count(*) from course)
-- ;

-- 12、查询至少有一门课与学号为“001”的同学所学相同的同学的学号和姓名；
--
-- 13、查询至少学过学号为“001”同学所有课的其他同学学号和姓名；
--
-- 14、查询和“002”号的同学学习的课程完全相同的其他同学学号和姓名；
--
-- 15、删除学习“叶平”老师课的score表记录；
-- delete from score where course_id in
-- (select DISTINCT teacher.tid from course left join teacher on course.teacher_id=teacher.tid where teacher.tname="ye平老师");

-- 16、向SC表中插入一些记录，这些记录要求符合以下条件：①没有上过编号“002”课程的同学学号；②插入“002”号课程的平均成绩；
--
-- 17、按平均成绩从低到高 显示所有学生的“语文”、“数学”、“英语”三门的课程成绩，按如下形式显示： 学生ID,语文,数学,英语,有效课程数,有效平均分；
--
-- 18、查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分；
-- select course_id, min(num),MAX(num) from score GROUP BY course_id;

-- 19、按各科平均成绩从低到高和及格率的百分数从高到低顺序；
-- select course_id, avg(num) from score GROUP BY course_id;
-- select course_id,count(1) from score where num>60 GROUP BY course_id;
-- select course_id,count(1) from score where num<60 GROUP BY course_id;


-- 20、课程平均分从高到低显示（现实任课老师）；
-- select cname,avg(num) from course left join score on course.cid=score.course_id left join teacher on course.teacher_id=teacher.tid
-- GROUP BY cname
-- ORDER BY avg(num) desc;

-- 21、查询各科成绩前三名的记录:(不考虑成绩并列情况)

-- 22、查询每门课程被选修的学生数；
-- select course_id, count(1) as "选修人数" from score GROUP BY course_id;

-- 23、查询出只选修了一门课程的全部学生的学号和姓名；
-- select sid, sname from student where sid =
-- (
-- select student_id from score  GROUP BY student_id HAVING count(1)=1
-- );

-- 24、查询男生、女生的人数；
-- select gender as "性别", count(1) as "数量" from student GROUP BY gender;

-- 25、查询姓“张”的学生名单；
-- select * from student where sname like "张%";

-- 26、查询同名同姓学生名单，并统计同名人数；
-- select sname,count(1) as count  from student GROUP BY sname;

-- 27、查询每门课程的平均成绩，结果按平均成绩升序排列，平均成绩相同时，按课程号降序排列；
-- select course_id,avg(num) from score GROUP BY course_id ORDER BY avg(num) asc, course_id desc;

-- 28、查询平均成绩大于85的所有学生的学号、姓名和平均成绩；
-- select student_id,sname, avg(num) from score LEFT JOIN student ON score.student_id=student.sid
--  GROUP BY student_id HAVING avg(num)>80;

-- 29、查询课程名称为“数学”，且分数低于60的学生姓名和分数；
-- select A.student_id, sname, num from
-- (select student_id,num from score left join course on score.course_id=course.cid where cname='物理' and num<60) as A
-- left join student on A.student_id=student.sid;

-- 30、查询课程编号为003且课程成绩在80分以上的学生的学号和姓名；
-- select A.student_id, student.sname from
-- (select student_id, course_id,num,cname from score left join course on score.course_id=course.cid where course_id=3 and num>80) as A
-- left join student on A.student_id=student.sid;

-- 31、求选了课程的学生人数
-- select count(distinct student_id) from score;

-- 32、查询选修“杨艳”老师所授课程的学生中，成绩最高的学生姓名及其成绩；
--
-- 33、查询各个课程及相应的选修人数；
-- select A.course_id,cname,A.`选修人数` from
-- (select course_id,count(1) as '选修人数' from score GROUP BY course_id) as A
-- left join course on A.course_id=course.cid;

-- 34、查询不同课程但成绩相同的学生的学号、课程号、学生成绩；
--
-- 35、查询每门课程成绩最好的前两名；
--

-- 36、检索至少选修两门课程的学生学号；
-- 查学生选的课程数量
-- SELECT student_id,count(1) from score GROUP BY student_id HAVING count(1) >= 2;

-- 37、查询全部学生都选修的课程的课程号和课程名；
-- 先查询所有学生选的课程id
-- select course_id,count(1) from score group by course_id having count(1) = (select count(1) from student);

-- 38、查询没学过“叶平”老师讲授的任一门课程的学生姓名；
-- 方法一：（答案不对）
-- 先查出叶平老师教的课程id,在根据老师id查出对应课程id,根据课程id查出对应的学生，再根据学生从总表筛选没有的学生
-- select sid,sname from student where sid not in
-- (select student_id from score where course_id in
-- (select cid from course where teacher_id=
-- (select tid from teacher where tname="李平老师")) GROUP BY student_id)
-- ;
-- 方法二：先查询到叶平老师的课程,在查出学生学的课程不在叶平老师课程里的学生
-- select student_id from score where course_id not in
-- (select cid from teacher LEFT JOIN course on teacher.tid=course.teacher_id where teacher.tname='李平老师')
-- GROUP BY student_id;
-- 方法三：标准答案
--     select student_id,student.sname from score
--     left join student on score.student_id = student.sid
--     where score.course_id not in (
--         select cid from course left join teacher on course.teacher_id = teacher.tid where tname = '李平老师'
--     )
--     group by student_id

-- 39、查询两门以上不及格课程的同学的学号及其平均成绩；
-- 先查出两门不及格同学id,在根据id在score表中group by student 计算出avg(num)
-- select student_id,AVG(num) from score where student_id =
-- (select student_id from
-- (select student_id,count(1) from score where num < 60 GROUP BY student_id having count(1) >= 2) as A)
-- GROUP BY student_id
-- ;

-- 40、检索“004”课程分数小于60，按分数降序排列的同学学号；
-- select * from score where course_id =4 and num < 100 ORDER BY num desc;

-- 41、删除“002”同学的“001”课程的成绩；
-- delete from score where student_id =2 and course_id =8;



